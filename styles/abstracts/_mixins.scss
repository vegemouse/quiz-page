// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

@mixin omega-reset($nth) {
  &:nth-child(#{$nth}) { margin-right: flex-gutter(); }
  &:nth-child(#{$nth}+1) { clear: none }
}

@mixin set-background($box-size) {
  @for $i from 1 to 5 {
    @if $box-size == "large" {
      .box-large {
        background: $background-color-1;
      }
    } @else if $box-size == "medium" {
      .box-medium:nth-child(#{$i}) {
        background: nth($background-colors, ($i + 1));
      }
    } @else if $box-size == "wide" {
      .box-wide:nth-child(#{$i}n) {
        background: nth($background-colors, ($i + 4));
      }
    } @else if $box-size == "small" {
      .box-small:nth-child(#{$i}n + 1) {
        background: nth($background-colors, ($i + 3));
      }
    }
  }
}
